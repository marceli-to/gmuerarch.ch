/**
 * -----------------------------------------------------------------------------
 * File: layout/grid
 * -----------------------------------------------------------------------------
 *
 */

@for $i from 1 through 12 {
  %grid-cols-#{$i},
  .grid-cols-#{$i} {
    display: grid;
    grid-template-columns: repeat($i, minmax(0, 1fr));
  }
}

@for $i from 1 through 12 {
  %sm\:grid-cols-#{$i},
  .sm\:grid-cols-#{$i} {
    @include bp-sm() {
      display: grid;
      grid-template-columns: repeat($i, minmax(0, 1fr));
    }
  }
}

@for $i from 1 through 12 {
  %md\:grid-cols-#{$i},
  .md\:grid-cols-#{$i} {
    @include bp-md() {
      display: grid;
      grid-template-columns: repeat($i, minmax(0, 1fr));
    }
  }
}

%grid,
.grid {
  display: grid;
}

%grid-cols-none,
.grid-cols-none {
  grid-template-columns: none !important;
}

%grid-gap,
.grid-gap {
  grid-gap: $space-2x;
  @include bp-md() {
    grid-gap: $space-3x;
  }
}

%grid-column-gap,
.grid-column-gap {
  grid-column-gap: $space-2x;
  @include bp-md() {
    grid-column-gap: $space-3x;
  }
}

%grid-row-gap,
.grid-row-gap {
  grid-row-gap: $space-2x;
  @include bp-md() {
    grid-row-gap: $space-3x;
  }
}

%grid-gap-none,
.grid-gap-none {
  grid-column-gap: 0;
}

%grid-row-gap-none,
.grid-row-gap-none {
  grid-row-gap: 0;
}

@for $i from 1 through 12 {
  %span-#{$i},
  .span-#{$i} {
    grid-column: span $i / span $i;
  }
}

@for $i from 1 through 12 {
  %sm\:span-#{$i},
  .sm\:span-#{$i} {
    @include bp-sm() {
      grid-column: span $i / span $i;
    }
  }
}

@for $i from 1 through 12 {
  %md\:span-#{$i},
  .md\:span-#{$i} {
    @include bp-md() {
      grid-column: span $i / span $i;
    }
  }
}

@for $i from 1 through 12 {
  %lg\:span-#{$i},
  .lg\:span-#{$i} {
    @include bp-lg() {
      grid-column: span $i / span $i;
    }
  }
}

%span-full,
.span-full	{
  grid-column: 1 / -1;
}

@for $i from 1 through 12 {
  %start-#{$i},
  .start-#{$i} {
    grid-column-start: $i !important;
  }
}

@for $i from 1 through 12 {
  %end-#{$i},
  .end-#{$i} {
    grid-column-end: $i;
  }
}

// Content grid
.content-grid {

  + .content-grid {
    @include bp-sm() {
      margin-top: $space-3x;
    }
  }

  img {
    display: block;
    height: 100%;
    max-width: 100%;
    object-fit: cover;
    width: 100%;
  }

  &.content-grid,
  &.content-grid--1,
  &.content-grid--1\:1,
  &.content-grid--2\:1,
  &.content-grid--1\:2 {

    .content-grid__item {
      margin-bottom: $space-3x;
      position: relative;
      
      @include bp-sm() {
        height: $full-viewport-height-sm;
        margin-bottom: 0;
      }

      &.is-fixed {
        position: fixed !important;
        right: $space-3x;
        width: calc(50% - #{$space-5x});

        @include bp-xs() {
          height: $full-viewport-height-xs;
          top: $site-header-height-xs;
        }

        @include bp-sm() {
          height: $full-viewport-height-sm;
          top: $site-header-height-sm;
        }
      }
    }
  }

  &.content-grid--1\:1,
  &.content-grid--2\:1,
  &.content-grid--1\:2 {
    @include bp-sm() {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: $space-4x;
    }
  }
}